#!/usr/bin/env bash
# Terragrunt Reference Architecture - Environment Configuration
# Simplified and modular environment setup

# Exit immediately if any command fails
set -e

# Ensure PROJECT_ROOT is set reliably
PROJECT_ROOT="${PROJECT_ROOT:-$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)}"
export PROJECT_ROOT

# Source utility functions
# shellcheck source=./scripts/envrc-utils.sh
source "${PROJECT_ROOT}/scripts/envrc-utils.sh"

# Core initialization
_core_init

# =====================================================================
# ðŸ”§ CUSTOMIZATION SECTION
# =====================================================================

# Uncomment and modify these variables as needed

# Cloud and Region Configuration
# Use default if not set, with explicit export
DEFAULT_REGION="${DEFAULT_REGION:-us-east-1}"
_safe_export DEFAULT_REGION "$DEFAULT_REGION"

# Terraform and Terragrunt Settings
TF_INPUT="${TF_INPUT:-0}"
_safe_export TF_INPUT "$TF_INPUT"

TG_STACK_TF_VERSION="${TG_STACK_TF_VERSION:-1.9.0}"
_safe_export TG_STACK_TF_VERSION "$TG_STACK_TF_VERSION"

# Application Metadata
TG_STACK_APP_AUTHOR="${TG_STACK_APP_AUTHOR:-Your Name}"
_safe_export TG_STACK_APP_AUTHOR "$TG_STACK_APP_AUTHOR"

TG_STACK_APP_PRODUCT_NAME="${TG_STACK_APP_PRODUCT_NAME:-your-app-name}"
_safe_export TG_STACK_APP_PRODUCT_NAME "$TG_STACK_APP_PRODUCT_NAME"

# Logging Configuration
LOG_LEVEL="${LOG_LEVEL:-info}"
_safe_export LOG_LEVEL "$LOG_LEVEL"

LOG_DIR_PATH="${HOME}/.logs/${TG_STACK_APP_PRODUCT_NAME}"
# Ensure log directory exists
mkdir -p "$LOG_DIR_PATH" 2>/dev/null || true
_safe_export LOG_DIR "$LOG_DIR_PATH"

# Remote State Configuration
# Placeholder values - MUST be replaced in actual configuration
_safe_export TG_STACK_REMOTE_STATE_BUCKET_NAME "your-state-bucket"
_safe_export TG_STACK_REMOTE_STATE_LOCK_TABLE "your-lock-table"

# Tool Availability Check
_validate_layer_config "CORE" \
  "DEFAULT_REGION" \
  "TG_STACK_APP_PRODUCT_NAME"

# Final initialization log
_log "INFO" "Environment for ${TG_STACK_APP_PRODUCT_NAME} initialized successfully"

# Display all exported environment variables
_display_exported_vars
