#!/usr/bin/env bash
# Terragrunt Reference Architecture - Environment Configuration
# Simplified and modular environment setup

# Exit immediately if any command fails
set -e

# Source utility functions
source "${PWD}/scripts/envrc-utils.sh"

# Core initialization
_core_init

# =====================================================================
# ðŸ”§ CUSTOMIZATION SECTION
# =====================================================================

# Uncomment and modify these variables as needed

# Cloud and Region Configuration
# _safe_export DEFAULT_REGION "us-east-1"

# Terraform and Terragrunt Settings
# _safe_export TF_INPUT "0"
# _safe_export TG_STACK_TF_VERSION "1.9.0"

# Application Metadata
# _safe_export TG_STACK_APP_AUTHOR "Your Name"
# _safe_export TG_STACK_APP_PRODUCT_NAME "your-app-name"

# Logging Configuration
# _safe_export LOG_LEVEL "info"
# LOG_DIR_PATH="${HOME}/.logs/your-app"
# mkdir -p "$LOG_DIR_PATH" 2>/dev/null || true
# _safe_export LOG_DIR "$LOG_DIR_PATH"

# Remote State Configuration
_safe_export TG_STACK_REMOTE_STATE_BUCKET_NAME "your-state-bucket"
_safe_export TG_STACK_REMOTE_STATE_LOCK_TABLE "your-lock-table"

# Optional: Nix Flake Support
if command -v nix &> /dev/null; then
  use flake
else
  _log "WARN" "Nix not found, skipping flake initialization"
fi

# Optional: Source parent environment variables
source_up 2>/dev/null || true

# Tool Availability Check
_validate_layer_config "CORE" \
  "DEFAULT_REGION" \
  "TG_STACK_APP_PRODUCT_NAME"

# Final initialization log
_log "INFO" "Environment for ${TG_STACK_APP_PRODUCT_NAME} initialized successfully"
