---
name: Dagger CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  tf_modules_static_check:
    name: Terraform Modules Static Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Terraform Modules Static Check
        uses: dagger/dagger-for-github@v8.0.0
        with:
          version: "latest"
          verb: "call"
          module: ci/ci-terragrunt # Specifies the directory of the Dagger module
          args: job-terraform-modules-static-check # Calls the specific Dagger function
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  tg_units_static_check:
    name: Terragrunt Units Static Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Terragrunt Units Static Check
        uses: dagger/dagger-for-github@v8.0.0
        with:
          version: "latest"
          verb: "call"
          module: ci/ci-terragrunt # Specifies the directory of the Dagger module
          args: >
            job-terragrunt-units-static-check --no-cache --aws-access-key-id=env://AWS_ACCESS_KEY_ID --aws-secret-access-key=env://AWS_SECRET_ACCESS_KEY
            --env-vars="TG_NON_INTERACTIVE=env://TG_NON_INTERACTIVE,TG_LOG_LEVEL=env://TG_LOG_LEVEL,TG_STACK_REMOTE_STATE_BUCKET_NAME=env://TG_STACK_REMOTE_STATE_BUCKET_NAME,TG_STACK_REMOTE_STATE_LOCK_TABLE=env://TG_STACK_REMOTE_STATE_LOCK_TABLE,DEFAULT_REGION=env://DEFAULT_REGION"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DEFAULT_REGION: "us-east-1"
          TG_NON_INTERACTIVE: "true"
          TG_LOG_LEVEL: "info"
          TG_STACK_REMOTE_STATE_BUCKET_NAME: ${{ secrets.TF_STATE_BUCKET }}
          TG_STACK_REMOTE_STATE_LOCK_TABLE: ${{ secrets.TF_STATE_LOCK_TABLE }}

  tg_units_plan:
    name: Terragrunt Units Plan
    runs-on: ubuntu-latest
    needs: tg_units_static_check # Ensure static checks pass before planning
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Terragrunt Units Plan
        uses: dagger/dagger-for-github@v8.0.0
        with:
          version: "latest"
          verb: "call"
          module: ci/ci-terragrunt # Specifies the directory of the Dagger module
          args: >
            job-terragrunt-units-plan --no-cache --aws-access-key-id=env://AWS_ACCESS_KEY_ID --aws-secret-access-key=env://AWS_SECRET_ACCESS_KEY
            --env-vars="TG_NON_INTERACTIVE=env://TG_NON_INTERACTIVE,TG_LOG_LEVEL=env://TG_LOG_LEVEL,TG_STACK_REMOTE_STATE_BUCKET_NAME=env://TG_STACK_REMOTE_STATE_BUCKET_NAME,TG_STACK_REMOTE_STATE_LOCK_TABLE=env://TG_STACK_REMOTE_STATE_LOCK_TABLE,DEFAULT_REGION=env://DEFAULT_REGION"
        env:
          # Map GitHub secrets to environment variables for the Dagger function call
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # Add variables from .env needed by the Dagger function or Terragrunt itself
          DEFAULT_REGION: "us-east-1" # Or use secrets.AWS_REGION if available/preferred
          TG_NON_INTERACTIVE: "true" # From .env
          TG_LOG_LEVEL: "info" # From .env
          TG_STACK_REMOTE_STATE_BUCKET_NAME: ${{ secrets.TF_STATE_BUCKET }} # Assumed Secret Name
          TG_STACK_REMOTE_STATE_LOCK_TABLE: ${{ secrets.TF_STATE_LOCK_TABLE }} # Assumed Secret Name
          # AWS_REGION: ${{ secrets.AWS_REGION }} # Example if region is needed
