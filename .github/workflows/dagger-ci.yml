---
name: Dagger CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  DAGGER_VERSION: "0.18.8"
  DEFAULT_REGION: "us-east-1" # Global env var for default region

jobs:
  tf_modules_ci:
    name: Terraform Modules Ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dagger CLI
        run: |
          curl -fsSL https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=${{ env.DAGGER_VERSION }} BIN_DIR=$HOME/.local/bin sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Validate Terraform Modules Static Analysis
        run: dagger call --module pipeline/infra job-tf-modules-static-check
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Validate Terraform Modules Compatibility
        run: dagger call --module pipeline/infra job-tf-modules-compatibility-check
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  tg_units_static_check:
    name: Terragrunt Units Static Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dagger CLI
        run: |
          curl -fsSL https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=${{ env.DAGGER_VERSION }} BIN_DIR=$HOME/.local/bin sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Run Terragrunt Units Static Check
        run: >-
          dagger call --module pipeline/infra
          job-citg-stack-static-analysis
          --deployment-region "${{ env.DEFAULT_REGION }}"
          --aws-access-key-id env:AWS_ACCESS_KEY_ID
          --aws-secret-access-key env:AWS_SECRET_ACCESS_KEY
          --remote-state-bucket "${{ secrets.TF_STATE_BUCKET }}"
          --remote-state-lock-table "${{ secrets.TF_STATE_LOCK_TABLE }}"
          --remote-state-region "${{ env.DEFAULT_REGION }}"
          --environment "global"
          --stack "dni"
          --no-cache
          --env-vars "TG_NON_INTERACTIVE=true,TG_LOG_LEVEL=info,TG_STACK_REMOTE_STATE_BUCKET_NAME=${{ secrets.TF_STATE_BUCKET }},TG_STACK_REMOTE_STATE_LOCK_TABLE=${{ secrets.TF_STATE_LOCK_TABLE }},TG_STACK_REMOTE_STATE_REGION=${{ env.DEFAULT_REGION }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # DEFAULT_REGION is available from global env
          # TF_STATE_BUCKET and TF_STATE_LOCK_TABLE are interpolated from secrets directly

  tg_units_plan:
    name: Terragrunt Units Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dagger CLI
        run: |
          curl -fsSL https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=${{ env.DAGGER_VERSION }} BIN_DIR=$HOME/.local/bin sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Run Terragrunt Units Plan
        run: >-
          dagger call --module pipeline/infra
          job-tg-exec
          --cmd "plan"
          --layer "dni"
          --unit "dni-generator"
          --aws-access-key-id env:AWS_ACCESS_KEY_ID
          --aws-secret-access-key env:AWS_SECRET_ACCESS_KEY
          --remote-state-bucket "${{ secrets.TF_STATE_BUCKET }}"
          --remote-state-lock-table "${{ secrets.TF_STATE_LOCK_TABLE }}"
          --remote-state-region "${{ env.DEFAULT_REGION }}"
          --deployment-region "${{ env.DEFAULT_REGION }}"
          --environment "global"
          --no-cache
          --env-vars "TG_NON_INTERACTIVE=true,TG_LOG_LEVEL=info,TG_STACK_REMOTE_STATE_BUCKET_NAME=${{ secrets.TF_STATE_BUCKET }},TG_STACK_REMOTE_STATE_LOCK_TABLE=${{ secrets.TF_STATE_LOCK_TABLE }},TG_STACK_REMOTE_STATE_REGION=${{ env.DEFAULT_REGION }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # DEFAULT_REGION is available from global env
          # TF_STATE_BUCKET and TF_STATE_LOCK_TABLE are interpolated from secrets directly
